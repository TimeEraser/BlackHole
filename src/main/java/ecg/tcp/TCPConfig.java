/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ecg.tcp;

import ecg.ecgshow.MyECGShowUI;
import ecg.myals.WelcomeWindow;
import static ecg.myals.WelcomeWindow.welcomeWindow;	//public static void main(String args[]) {welcomeWindow = new WelcomeWindow();}

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.*;
import java.io.IOException;


public class TCPConfig extends JFrame {		//TCP配置界面

	private static final long serialVersionUID = 1L;
	/**
     * Creates new form tcpconfig
     */
	
	// Variables declaration - do not modify                     
    private JButton jButton1;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JTextField jTextField1;
    private JTextField jTextField2;
    private JTextField jTextField3;
    private JTextField jTextField4;
    private JRadioButton jRadioButton1;
    private JRadioButton jRadioButton2;
    // End of variables declaration

    private TCPClient client;	//把TCPConfig的内容传给TCPClient
	
	
    public TCPConfig() {		//构造方法
        initComponents();		//初始化构件
        addWindowListener(new WindowAdapter() {		//添加窗口监听
            @Override			//windowClosing方法重载
            public void windowClosing(WindowEvent e) {
            	if(client != null)
            	client.stopFlag = true;
            }
	});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {      //初始化构件

        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        jLabel5 = new JLabel();
        jTextField1 = new JTextField();
        jTextField2 = new JTextField();
        jTextField3 = new JTextField();
        jTextField4 = new JTextField();
        jRadioButton1=new JRadioButton("男") ;
        jRadioButton2=new JRadioButton("女") ;
        jButton1 = new JButton();
        ButtonGroup buttonGroup=new ButtonGroup();       //单选按钮组
        buttonGroup.add(jRadioButton1);
        buttonGroup.add(jRadioButton2);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);		//不可更改大小

        jLabel1.setText("心电仪IP地址");
        jLabel2.setText("端口号");
        jLabel3.setText("档案ID");
        jLabel4.setText("姓名");
        jLabel5.setText("性别");
        
        jButton1.setText("确定");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);       //jButton1ActionPerformed这个方法在后面定义
            }
        }
        );     //按钮的监听事件

        GroupLayout layout = new GroupLayout(getContentPane());     //GroupLayout布局
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                      .addGap(40, 40, 40)
                      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                          .addComponent(jButton1)
                          .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                        	            .addComponent(jLabel5)
                        	            .addComponent(jLabel4)
                        	            .addComponent(jLabel3)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1)
                                )
                                 .addGap(40, 40, 40)
                                 .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                         .addGroup(layout.createSequentialGroup()
                                                         .addComponent(jRadioButton1)
                                                         .addComponent(jRadioButton2)
                                         )
                        	            .addComponent(jTextField4, GroupLayout.PREFERRED_SIZE, 160, GroupLayout.PREFERRED_SIZE)
                        	            .addComponent(jTextField3, GroupLayout.PREFERRED_SIZE, 160, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField2, GroupLayout.PREFERRED_SIZE, 160, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, 160, GroupLayout.PREFERRED_SIZE)
                                 )
                          )
                      )
                .addContainerGap(85, Short.MAX_VALUE)
            )
        );

        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20,20,20)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                )
                .addGap(20,20,20)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                )
                .addGap(20,20,20)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                )
                .addGap(20,20,20)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                )
                .addGap(20,20,20)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup()

                         .addComponent(jRadioButton1)
                         .addComponent(jRadioButton2)
                        )
                )
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(23, Short.MAX_VALUE)
            )
        );

        pack();		//调整此窗口的大小，以适合其子组件的首选大小和布局
    }// </editor-fold>      初始化构件initComponents() 结束

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    	if (jButton1.getText().equals("确定")) {

            String jRadioButtonName=new String("null");
            if(jRadioButton1.isSelected()){
                jRadioButtonName=jRadioButton1.getText();
            }
            else if (jRadioButton2.isSelected()){
                jRadioButtonName=jRadioButton2.getText();
            }

    		client = new TCPClient();		//新建一个TCPClient()方法的实例client
    		client.setHost(jTextField1.getText());	//设置主机
    		client.setPort(Integer.parseInt(jTextField2.getText()));	//设置端口
            client.setID(jTextField3.getText());
            client.setNAME(jTextField4.getText());
            client.setSEX(jRadioButtonName);

    		client.stopFlag = false;
    		client.start();		//客户端线程开始运行
//    		if(client.connectFlag){					//
//    			jButton1.setText("结束");			//
//    			jTextField1.setEnabled(false);		//
//    			jTextField2.setEnabled(false);		//
//    		}										//
    	}
    	else if(jButton1.getText().equals("结束")){
//    		try {									//
//				client.getS().shutdownInput();		//
//				client.getS().close();				//
//				System.out.println("关闭成功！");	//
//				jButton1.setText("确定");			//
//				jTextField1.setEnabled(true);		//
//				jTextField2.setEnabled(true);		//
//			} catch (IOException e) {				//
//				// TODO Auto-generated catch block	//
//				e.printStackTrace();				//
//			}										//
    		client.stopFlag = true;
    	}
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TCPConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TCPConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TCPConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TCPConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TCPConfig().setVisible(true);
            }
        });
    }

    public JButton getjButton1() {
		return jButton1;
	}

	public void setjButton1(JButton jButton1) {
		this.jButton1 = jButton1;
	}

	public JTextField getjTextField1() {
		return jTextField1;
	}

	public void setjTextField1(JTextField jTextField1) {
		this.jTextField1 = jTextField1;
	}

	public JTextField getjTextField2() {
		return jTextField2;
	}
	public void setjTextField2(JTextField jTextField2) {
		this.jTextField2 = jTextField2;
	}

    public JTextField getjTextField3() {
        return jTextField3;
    }
    public void setjTextField3(JTextField jTextField3) {
        this.jTextField3 = jTextField3;
    }

    public JTextField getjTextField4() {
        return jTextField4;
    }
    public void setjTextField4(JTextField jTextField4) {
        this.jTextField4 = jTextField4;
    }


}